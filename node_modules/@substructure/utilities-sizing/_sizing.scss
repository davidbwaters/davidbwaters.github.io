/*
 *  Utilities - Sizing
 */


@use 'sass:map';
@use '../settings';
@use '../tools';


$height: false !default;

$push: true !default;

$pull: true !default;

$responsive: settings.$responsive !default;

$factors: settings.$sizing-factors !default;

$separator: settings.$sizing-separator !default;

$breakpoints: settings.$breakpoints !default;

$breakpoint-separator:
  settings.$breakpoint-separator
!default;

$namespaces: () !default;

$namespaces: map.merge(
  (
    width: #{
      map.get( settings.$layer-namespaces, utilities ) +
      ''
    },
    height: #{
      map.get( settings.$layer-namespaces, utilities ) +
      'height-'
    },
    push: #{
      map.get( settings.$layer-namespaces, utilities ) +
      'push-'
    },
    pull: #{
      map.get( settings.$layer-namespaces, utilities ) +
      'pull-'
    }
  ),
  $namespaces
);


@mixin _sizing( $type ) {

  @each $factor in $factors {

    @for $count from 1 through $factor {

      $class: #{
        map.get( $namespaces, $type ) +
        $count +
        $separator +
        $factor
      };

      $property: $type;
      $size-value: $count / $factor * 100%;

      @if $type == push {

        .#{ $class } {
          margin-left: #{ $size-value } !important;
        }

      }

      @if $type == pull {

        .#{ $class } {
          margin-left: #{
            $count / $factor * 100% * -1
          } !important;
        }

      };

      @if $type != pull and $type != push {

        .#{ $class } {

          #{ $property }: #{ $size-value } !important;

        }

        @if $responsive == true {

          @each $breakpoint in $breakpoints {

            @include tools.respond-to( $breakpoint ) {

              #{
                $class +
                $breakpoint-separator +
                $breakpoint
              } {

                #{ $property }: #{ $size-value } !important;

              }

            }

          }

        }

      }

    }

  }

}

@include _sizing( width );

@if ( $height == true ) {
  @include _sizing( height );
}

@if ( $push == true ) {
  @include _sizing( push );
}

@if ( $pull == true ) {
  @include _sizing( pull );
}
