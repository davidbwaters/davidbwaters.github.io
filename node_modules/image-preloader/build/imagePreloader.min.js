/**
 * image-preloader - Simple, fast and lightweight html-images preloader
 * @version v1.1.1
 * @link https://github.com/smelukov/ImagePreloader#readme
 * @license MIT
 */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.imagePreloader=t():e.imagePreloader=t()}(this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return e[r].call(o.exports,o,o.exports,t),o.loaded=!0,o.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){e.exports=n(1)},function(e,t,n){var r=n(2),o=function(e,t){this.onProgress="function"==typeof t?t:null,this.fallbackImage="string"==typeof e||e instanceof HTMLImageElement?e:null};o.simplePreload=function(e){return new Promise(function(t,n){var r;e instanceof HTMLImageElement?(r=e,r.complete?r.naturalHeight?t(r):n(r):(r.onload=t.bind(null,r),r.onerror=r.onabort=n.bind(null,r))):"string"==typeof e&&(r=new Image,r.onload=t.bind(null,r),r.onerror=r.onabort=n.bind(null,r),r.src=e)})},o.prototype.preload=function(e){var t=this,n=Array.prototype.concat.apply([],Array.prototype.slice.call(arguments));return n=n.map(function(e){return o.simplePreload(e)["catch"](function(e){return t.fallbackImage?o.simplePreload(t.fallbackImage).then(function(t){return e.setAttribute("data-fail-src",e.src),e.src=t.src,e},function(){return Promise.reject(e)}):Promise.reject(e)})}),r(n,t.onProgress)},e.exports=o},function(e,t){function n(e,t){var n=e.map(function(e){return e.then(function(e){return{value:e,status:!0}},function(e){return{value:e,status:!1}}).then(function(e){return"function"==typeof t&&t(e),e})});return Promise.all(n)}e.exports=n}])});
//# sourceMappingURL=imagePreloader.min.js.map